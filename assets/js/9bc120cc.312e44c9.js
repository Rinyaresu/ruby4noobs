"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[446],{3905:(e,o,r)=>{r.d(o,{Zo:()=>m,kt:()=>b});var a=r(7294);function t(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function n(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?n(Object(r),!0).forEach((function(o){t(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function i(e,o){if(null==e)return{};var r,a,t=function(e,o){if(null==e)return{};var r,a,t={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],o.indexOf(r)>=0||(t[r]=e[r]);return t}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var d=a.createContext({}),u=function(e){var o=a.useContext(d),r=o;return e&&(r="function"==typeof e?e(o):s(s({},o),e)),r},m=function(e){var o=u(e.components);return a.createElement(d.Provider,{value:o},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},c=a.forwardRef((function(e,o){var r=e.components,t=e.mdxType,n=e.originalType,d=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=u(r),c=t,b=p["".concat(d,".").concat(c)]||p[c]||l[c]||n;return r?a.createElement(b,s(s({ref:o},m),{},{components:r})):a.createElement(b,s({ref:o},m))}));function b(e,o){var r=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var n=r.length,s=new Array(n);s[0]=c;var i={};for(var d in o)hasOwnProperty.call(o,d)&&(i[d]=o[d]);i.originalType=e,i[p]="string"==typeof e?e:t,s[1]=i;for(var u=2;u<n;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},4244:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var a=r(7462),t=(r(7294),r(3905));const n={},s="M\xe9todos",i={unversionedId:"Basico da Linguagem/metodos",id:"Basico da Linguagem/metodos",title:"M\xe9todos",description:"Ol\xe1. Vamos ver como escrever nossos pr\xf3prios m\xe9todos. Note que podemos definir m\xe9todos facilmente em Ruby, usando def, terminando (sempre) com end. Segundo as conven\xe7\xf5es de Ruby, nos nomes dos m\xe9todos deve-se usar letras min\xfasculas separando as palavras com um sublinhado (_).",source:"@site/docs/3-Basico da Linguagem/9-metodos.md",sourceDirName:"3-Basico da Linguagem",slug:"/Basico da Linguagem/metodos",permalink:"/ruby4noobs/Basico da Linguagem/metodos",draft:!1,tags:[],version:"current",lastUpdatedBy:"Kaique Linhares",lastUpdatedAt:1693364504,formattedLastUpdatedAt:"30 de ago. de 2023",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entrada e Sa\xedda",permalink:"/ruby4noobs/Basico da Linguagem/entrada-e-saida"},next:{title:"Classes e Objetos",permalink:"/ruby4noobs/Modulo Intermediario/classes-e-objetos"}},d={},u=[{value:"Mas, o que s\xe3o m\xe9todos?",id:"mas-o-que-s\xe3o-m\xe9todos",level:2},{value:"Par\xe2metros",id:"par\xe2metros",level:2}],m={toc:u},p="wrapper";function l(e){let{components:o,...r}=e;return(0,t.kt)(p,(0,a.Z)({},m,r,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"m\xe9todos"},"M\xe9todos"),(0,t.kt)("p",null,"Ol\xe1. Vamos ver como escrever nossos pr\xf3prios m\xe9todos. Note que podemos definir m\xe9todos facilmente em Ruby, usando ",(0,t.kt)("inlineCode",{parentName:"p"},"def"),", terminando (",(0,t.kt)("strong",{parentName:"p"},"sempre"),") com ",(0,t.kt)("inlineCode",{parentName:"p"},"end"),". Segundo as conven\xe7\xf5es de Ruby, nos nomes dos m\xe9todos deve-se usar letras min\xfasculas separando as palavras com um sublinhado (_)."),(0,t.kt)("h2",{id:"mas-o-que-s\xe3o-m\xe9todos"},"Mas, o que s\xe3o m\xe9todos?"),(0,t.kt)("p",null,"M\xe9todos s\xe3o o meio que utilizamos para ler, modificar e definir os atributos de um objeto."),(0,t.kt)("p",null,"Exemplo de m\xe9todo b\xe1sico:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ruby"},'def fale_ruby\n  puts "Ruby!"\nend\n\nfale_ruby\n')),(0,t.kt)("p",null,"Executando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-txt"},'=> "Ruby!"\n')),(0,t.kt)("h2",{id:"par\xe2metros"},"Par\xe2metros"),(0,t.kt)("p",null,"Para passar informa\xe7\xf5es a um m\xe9todo pode-se incluir um ou mais ",(0,t.kt)("strong",{parentName:"p"},"par\xe2metros")," depois do seu nome. Nesse caso, ",(0,t.kt)("strong",{parentName:"p"},"os par\xeanteses devem ser utilizados"),", apesar de n\xe3o ser obrigat\xf3rio, mas a boa pr\xe1tica pede a sua utiliza\xe7\xe3o"),(0,t.kt)("p",null,"Exemplo de retorno de valor com o uso de par\xeanteses e envio de vari\xe1veis como argumentos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ruby"},"def soma(a, b)\n  a + b\nend\n\nputs soma(5, 6)\n")),(0,t.kt)("p",null,"Executando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-txt"},"=> 11\n")),(0,t.kt)("p",null,"Ao executarmos o primeiro exemplo podemos perceber que n\xe3o \xe9 obrigat\xf3rio usar ",(0,t.kt)("strong",{parentName:"p"},"par\xeanteses")," para chamar o m\xe9todo, e nem ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," para retornar um valor, como \xe9 necess\xe1rio em outras linguagens."),(0,t.kt)("p",null,"Mas no segundo exemplo \xe9 necess\xe1rio usar ",(0,t.kt)("strong",{parentName:"p"},"par\xeanteses")," por ser um m\xe9todo que ",(0,t.kt)("strong",{parentName:"p"},"recebe dois par\xe2metros"),"."),(0,t.kt)("p",null,"Vamos utilizar tudo que aprendermos anteriormente e criar um novo m\xe9todo e aprender um pouco da hist\xf3ria do nosso Brasil:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ruby"},"# Dados levemente alterados para conseguirmos executar sem bugs \ud83d\ude01\n\ndef historia_do_brasil(ano)\n  case ano\n  when 1500\n    'Chegada dos Portugueses ao Brasil'\n  when 1530..1814\n    'Per\xedodo colonial'\n  when 1815..1821\n    'Per\xedodo Reinado'\n  when 1822..1888\n    'Per\xedodo Imperial'\n  when 1889..2022\n    'Em 1889. A escravid\xe3o foi abolida e o Brasil passou a ter um per\xedodo republicano ditatorial'\n  end\nend\n\nputs historia_do_brasil(1889) # Aqui voc\xeas podem mudar o ano para ver os resultados diferentes\n")),(0,t.kt)("p",null,"Espero que tenham entendido o que aconteceu nesse exemplo. Se n\xe3o tiverem entendido, n\xe3o se preocupem, vamos ver mais m\xe9todos nas pr\xf3ximas aulas. \ud83d\ude01"))}l.isMDXComponent=!0}}]);