"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[228],{3905:(e,r,a)=>{a.d(r,{Zo:()=>c,kt:()=>b});var o=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function t(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,o)}return a}function s(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?t(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function i(e,r){if(null==e)return{};var a,o,n=function(e,r){if(null==e)return{};var a,o,n={},t=Object.keys(e);for(o=0;o<t.length;o++)a=t[o],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)a=t[o],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=o.createContext({}),u=function(e){var r=o.useContext(d),a=r;return e&&(a="function"==typeof e?e(r):s(s({},r),e)),a},c=function(e){var r=u(e.components);return o.createElement(d.Provider,{value:r},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},p=o.forwardRef((function(e,r){var a=e.components,n=e.mdxType,t=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(a),p=n,b=m["".concat(d,".").concat(p)]||m[p]||l[p]||t;return a?o.createElement(b,s(s({ref:r},c),{},{components:a})):o.createElement(b,s({ref:r},c))}));function b(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var t=a.length,s=new Array(t);s[0]=p;var i={};for(var d in r)hasOwnProperty.call(r,d)&&(i[d]=r[d]);i.originalType=e,i[m]="string"==typeof e?e:n,s[1]=i;for(var u=2;u<t;u++)s[u]=a[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,a)}p.displayName="MDXCreateElement"},4417:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>t,metadata:()=>i,toc:()=>u});var o=a(7462),n=(a(7294),a(3905));const t={},s="Tratamento de Exce\xe7\xf5es",i={unversionedId:"Modulo Intermediario/tratamento-de-exce\xe7\xf5es",id:"Modulo Intermediario/tratamento-de-exce\xe7\xf5es",title:"Tratamento de Exce\xe7\xf5es",description:"O tratamento de exce\xe7\xf5es \xe9 uma parte fundamental da programa\xe7\xe3o, permitindo lidar com erros e situa\xe7\xf5es inesperadas de forma controlada. Vamos estudar como lidar com exce\xe7\xf5es em Ruby.",source:"@site/docs/4-Modulo Intermediario/4-tratamento-de-exce\xe7\xf5es.md",sourceDirName:"4-Modulo Intermediario",slug:"/Modulo Intermediario/tratamento-de-exce\xe7\xf5es",permalink:"/ruby4noobs/Modulo Intermediario/tratamento-de-exce\xe7\xf5es",draft:!1,tags:[],version:"current",lastUpdatedBy:"Fernando Melo",lastUpdatedAt:1693398040,formattedLastUpdatedAt:"30 de ago. de 2023",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testes automatizados",permalink:"/ruby4noobs/Modulo Intermediario/testes"}},d={},u=[{value:"Bloco <code>begin</code>, <code>rescue</code> e <code>end</code>",id:"bloco-begin-rescue-e-end",level:2},{value:"Tratamento de exce\xe7\xf5es em cadeia",id:"tratamento-de-exce\xe7\xf5es-em-cadeia",level:3},{value:"Lan\xe7ando uma exce\xe7\xe3o pr\xe9-definida",id:"lan\xe7ando-uma-exce\xe7\xe3o-pr\xe9-definida",level:2},{value:"Lan\xe7ando uma exce\xe7\xe3o Personalizada",id:"lan\xe7ando-uma-exce\xe7\xe3o-personalizada",level:2}],c={toc:u},m="wrapper";function l(e){let{components:r,...a}=e;return(0,n.kt)(m,(0,o.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tratamento-de-exce\xe7\xf5es"},"Tratamento de Exce\xe7\xf5es"),(0,n.kt)("p",null,"O tratamento de exce\xe7\xf5es \xe9 uma parte fundamental da programa\xe7\xe3o, permitindo lidar com erros e situa\xe7\xf5es inesperadas de forma controlada. Vamos estudar como lidar com exce\xe7\xf5es em ",(0,n.kt)("em",{parentName:"p"},"Ruby"),"."),(0,n.kt)("p",null,"Para obter informa\xe7\xf5es sobre os tipos de exce\xe7\xe3o dispon\xedveis em Ruby, voc\xea pode consultar a ",(0,n.kt)("a",{parentName:"p",href:"https://docs.ruby-lang.org/en/master/Exception.html"},"documenta\xe7\xe3o oficial de exce\xe7\xf5es"),". Essa documenta\xe7\xe3o lista os diferentes tipos de exce\xe7\xe3o, suas descri\xe7\xf5es e hierarquias."),(0,n.kt)("h2",{id:"bloco-begin-rescue-e-end"},"Bloco ",(0,n.kt)("inlineCode",{parentName:"h2"},"begin"),", ",(0,n.kt)("inlineCode",{parentName:"h2"},"rescue")," e ",(0,n.kt)("inlineCode",{parentName:"h2"},"end")),(0,n.kt)("p",null,"Podemos utilizar o bloco begin, rescue e end para capturar exce\xe7\xf5es e executar um bloco de c\xf3digo alternativo quando um erro ocorre."),(0,n.kt)("p",null,"Antes, vamos fazer uma continha simples:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},"resultado = 10 / 0\n")),(0,n.kt)("p",null,'E \xe9 assim que voc\xea explode o seu terminal. ou s\xf3 recebe um "main.rb:1:in `/\': divided by 0 (ZeroDivisionError)", mas \xe9 parecido'),(0,n.kt)("p",null,"Lidaremos com isso de uma forma um pouco melhor:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},"begin\n  resultado = 10 / 0 # isso causar\xe1 uma exce\xe7\xe3o, que podemos intervir com 'rescue'\nrescue ZeroDivisionError\n  puts \"Erro de divis\xe3o por zero!\" # aqui n\xf3s inserimos o c\xf3digo de tratamento, no caso, uma mensagem.\nend\n")),(0,n.kt)("h3",{id:"tratamento-de-exce\xe7\xf5es-em-cadeia"},"Tratamento de exce\xe7\xf5es em cadeia"),(0,n.kt)("p",null,"O estagi\xe1rio estava aprendendo ruby, mas mesmo com o 'tratamento de erros' que ele aprendeu alguma coisa ainda estava errada."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},"begin\n  resultado = 10 / 0.to_s\nrescue ZeroDivisionError\n  puts \"Erro de divis\xe3o por zero!\"\nend\n\n# Output:\n# main.rb:2:in `/': String can't be coerced into Integer (TypeError)\n#     from main.rb:2:in `<main>'\n# exit status 1\n\ueea7\n")),(0,n.kt)("p",null,"Ent\xe3o, pra salvar o emprego do coitado, a gente salva a vida dele. Por enquanto..."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},'begin\n  resultado = 10 / 0.to_s\nrescue ZeroDivisionError\n  puts "Erro de divis\xe3o por zero!"\nrescue TypeError => e\n  puts "Erro: #{e}"\nend\n\n# Output:\n# Erro: String can\'t be coerced into Integer\n')),(0,n.kt)("p",null,"E em caso de necessidade de dar um passo a mais:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},'begin\n  erro_acessado = nil\n  resultado = 10 / 0.to_s\nrescue ZeroDivisionError\n  erro_acessado = 1\n  puts "Erro de divis\xe3o por zero!"\n  raise "Erro interno!"\nrescue TypeError => e\n  erro_acessado = 2\n  puts "Um erro de Tipo ocorreu: #{e.message}"\nensure # Esta parte sempre ser\xe1 executada\n  puts "Fim da execu\xe7\xe3o. Erro: #{erro_acessado}"\nend\n')),(0,n.kt)("h2",{id:"lan\xe7ando-uma-exce\xe7\xe3o-pr\xe9-definida"},"Lan\xe7ando uma exce\xe7\xe3o pr\xe9-definida"),(0,n.kt)("p",null,"As vezes, o levantamento de erros pode salvar a sua vida, evitar que o sistema continue executando um c\xf3digo com dados que voc\xea n\xe3o deseja, evitar uma sobrecarga, um delete com where incorreto.\nPara evitar essa dor de cabe\xe7a, fazemos:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},'def dividir(a, b)\n  raise ZeroDivisionError, "Divis\xe3o por zero!" if b == 0\n  a / b\nend\n\nbegin\n  resultado = dividir(10, 0)\nrescue StandardError => e\n  puts "Erro: #{e.message}" # Output: "Erro: Divis\xe3o por zero!"\nend\n')),(0,n.kt)("h2",{id:"lan\xe7ando-uma-exce\xe7\xe3o-personalizada"},"Lan\xe7ando uma exce\xe7\xe3o Personalizada"),(0,n.kt)("p",null,"No ruby, voc\xea sempre tem espa\xe7o para ir al\xe9m. Se voc\xea precisa muito de um novo formato de erro, sabe que vai utilizar v\xe1rias vezes, por exemplo, voc\xea pode simplesmente personaliz\xe1-lo!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},'class MeuErroPersonalizado < StandardError\nend\n\ndef meu_metodo\n  raise MeuErroPersonalizado, "Isso \xe9 um erro personalizado!"\nend\n\nbegin\n  meu_metodo\nrescue MeuErroPersonalizado => e\n  puts "Erro personalizado: #{e.message}"\nend\n')),(0,n.kt)("p",null,"O tratamento de exce\xe7\xf5es em Ruby \xe9 uma ferramenta poderosa para lidar com erros de forma elegante e controlada. Lembre-se de que \xe9 uma boa pr\xe1tica ser espec\xedfico ao capturar exce\xe7\xf5es e evitar capturar todas as exce\xe7\xf5es com rescue Exception, a menos que voc\xea saiba exatamente o que est\xe1 fazendo."),(0,n.kt)("p",null,"Com isso adquirimos compreens\xe3o dos tratamentos de exce\xe7\xf5es em ",(0,n.kt)("em",{parentName:"p"},"Ruby"),". Espero que tenha entendido bem, e que isso possa ajudar nos futuros projetos que voc\xea com certeza vai se bem suceder!"))}l.isMDXComponent=!0}}]);